
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNADOR ASIGNADORDIV ASIGNADORMULT ASIGNADORRESTA ASIGNADORSUM BACKTICK BOOLEAN BREAK CASE CHAN COMA COMILLASDOBLES CONST CONTINUE DECREMENTO DEFAULT DEFER DIFERENTE DIVIDE DOSPUNTOS ELSE EQUIVALENTE FALLTHROUGH FLOTANTE FLOTANTEI FOR FUNCTION GO GOTO ID IF IMPORT INCREMENTO INTERFACE LLAVEDE LLAVEIZ LPAREN MAP MAS MAYOROIGUALQUE MAYORQUE MENOROIGUALQUE MENORQUE MODULO MULTI NUMBER PACKAGE PUNTOCOMA RANGE RESTA RETURN RPAREN SELECT STRING STRUCT TIPODATOS TYPE VAR VARIABLE golang : asignacion\n              | expression\n              | condicional\n              | bucleFor\n              | funcion\n              | imports\n   asignacion : asignacionMate\n                  | asignacionOtros\n   asignacionMate : VAR VARIABLE TIPODATOS ASIGNADOR expression\n                     | VARIABLE DOSPUNTOS ASIGNADOR expression\n                     | VAR VARIABLE ASIGNADOR expression\n   asignacionOtros : VAR VARIABLE TIPODATOS ASIGNADOR valoresOtros\n                     | VARIABLE DOSPUNTOS ASIGNADOR valoresOtros\n                     | VAR VARIABLE ASIGNADOR valoresOtros\n   valoresOtros : STRING\n                    | BOOLEAN\n   funcion : FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ golang LLAVEDE\n              | FUNCTION VARIABLE LPAREN parametros RPAREN LLAVEIZ golang LLAVEDE\n   parametros : VARIABLE TIPODATOS\n                  | VARIABLE TIPODATOS COMA parametros\n   imports : package\n              | import\n   package : PACKAGE VARIABLE import : IMPORT variosImports  variosImports : STRING\n                    | LPAREN STRING RPAREN\n                    | LPAREN STRING variosImports RPAREN\n   condicional : tiposCondicion condicion LLAVEIZ golang LLAVEDE\n                  | condicional ELSE LLAVEIZ golang LLAVEDE\n\n   tiposCondicion : IF\n                      | ELSE IF\n   condicion : expression\n                | LPAREN expression comparadores expression RPAREN\n                | LPAREN expression comparadores expression RPAREN comparadores condicion\n                | expression comparadores condicion\n   comparadores : MAYORQUE\n                  | MENORQUE\n                  | MAYOROIGUALQUE\n                  | MENOROIGUALQUE\n                  | EQUIVALENTE\n                  | DIFERENTE\n   bucleFor : FOR asignacionFOR condicionFOR updateFOR LLAVEIZ golang LLAVEDE asignacionFOR : VARIABLE DOSPUNTOS ASIGNADOR expression PUNTOCOMA  condicionFOR : VARIABLE comparadores expression PUNTOCOMA  updateFOR : VARIABLE incrementoDecremento incrementoDecremento : INCREMENTO\n                            | DECREMENTO\n  expression : expression MAS termexpression : expression RESTA termexpression : termterm : term MULTI factorterm : term DIVIDE factorterm : factor\n  factor : NUMBER \n          | FLOTANTE \n          | VARIABLE\n  factor : LPAREN expression RPAREN'
    
_lr_action_items = {'FOR':([0,48,51,92,99,110,],[13,13,13,13,13,13,]),'FUNCTION':([0,48,51,92,99,110,],[14,14,14,14,14,14,]),'VAR':([0,48,51,92,99,110,],[19,19,19,19,19,19,]),'VARIABLE':([0,11,13,14,16,19,21,22,26,27,29,30,33,35,36,48,51,52,53,54,55,56,57,58,60,63,64,67,72,75,76,84,92,99,106,107,108,110,111,],[15,34,37,38,34,41,-30,42,34,34,34,34,34,-31,61,15,15,34,-36,-37,-38,-39,-40,-41,74,77,34,34,34,34,34,34,15,15,-44,-43,77,15,34,]),'IF':([0,12,48,51,92,99,110,],[21,35,21,21,21,21,21,]),'ELSE':([0,4,48,51,89,90,92,99,110,],[12,28,12,12,-29,-28,12,12,12,]),'PACKAGE':([0,48,51,92,99,110,],[22,22,22,22,22,22,]),'IMPORT':([0,48,51,92,99,110,],[23,23,23,23,23,23,]),'NUMBER':([0,11,16,21,26,27,29,30,33,35,48,51,52,53,54,55,56,57,58,64,67,72,75,76,84,92,99,110,111,],[24,24,24,-30,24,24,24,24,24,-31,24,24,24,-36,-37,-38,-39,-40,-41,24,24,24,24,24,24,24,24,24,24,]),'FLOTANTE':([0,11,16,21,26,27,29,30,33,35,48,51,52,53,54,55,56,57,58,64,67,72,75,76,84,92,99,110,111,],[25,25,25,-30,25,25,25,25,25,-31,25,25,25,-36,-37,-38,-39,-40,-41,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([0,11,16,21,23,26,27,29,30,33,35,38,48,51,52,53,54,55,56,57,58,64,67,68,72,75,76,84,92,99,110,111,],[16,33,16,-30,45,16,16,16,16,16,-31,63,16,16,33,-36,-37,-38,-39,-40,-41,16,16,45,16,16,16,16,16,16,16,33,]),'$end':([1,2,3,4,5,6,7,8,9,10,15,17,18,20,24,25,34,42,43,44,46,47,49,50,65,80,81,82,83,85,86,87,89,90,101,102,103,112,114,117,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-50,-56,-21,-22,-53,-54,-55,-56,-23,-24,-25,-48,-49,-51,-52,-57,-10,-13,-15,-16,-11,-14,-26,-29,-28,-9,-12,-27,-42,-17,-18,]),'LLAVEDE':([2,3,4,5,6,7,8,9,10,15,17,18,20,24,25,34,42,43,44,46,47,49,50,65,69,70,80,81,82,83,85,86,87,89,90,101,102,103,105,109,112,114,115,117,],[-1,-2,-3,-4,-5,-6,-7,-8,-50,-56,-21,-22,-53,-54,-55,-56,-23,-24,-25,-48,-49,-51,-52,-57,89,90,-10,-13,-15,-16,-11,-14,-26,-29,-28,-9,-12,-27,112,114,-42,-17,117,-18,]),'MAS':([3,10,15,20,24,25,32,34,40,46,47,49,50,59,65,80,85,91,96,97,101,],[26,-50,-56,-53,-54,-55,26,-56,26,-48,-49,-51,-52,26,-57,26,26,26,26,26,26,]),'RESTA':([3,10,15,20,24,25,32,34,40,46,47,49,50,59,65,80,85,91,96,97,101,],[27,-50,-56,-53,-54,-55,27,-56,27,-48,-49,-51,-52,27,-57,27,27,27,27,27,27,]),'MAYORQUE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,53,-56,-48,-49,-51,-52,53,53,-57,53,]),'MENORQUE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,54,-56,-48,-49,-51,-52,54,54,-57,54,]),'MAYOROIGUALQUE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,55,-56,-48,-49,-51,-52,55,55,-57,55,]),'MENOROIGUALQUE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,56,-56,-48,-49,-51,-52,56,56,-57,56,]),'EQUIVALENTE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,57,-56,-48,-49,-51,-52,57,57,-57,57,]),'DIFERENTE':([10,20,24,25,32,34,46,47,49,50,59,61,65,104,],[-50,-53,-54,-55,58,-56,-48,-49,-51,-52,58,58,-57,58,]),'LLAVEIZ':([10,20,24,25,28,31,32,34,46,47,49,50,65,71,73,78,93,94,95,100,104,116,],[-50,-53,-54,-55,48,51,-32,-56,-48,-49,-51,-52,-57,-35,92,99,-45,-46,-47,110,-33,-34,]),'RPAREN':([10,20,24,25,34,40,44,46,47,49,50,59,63,65,68,79,87,88,91,98,103,113,],[-50,-53,-54,-55,-56,65,-25,-48,-49,-51,-52,65,78,-57,87,100,-26,103,104,-19,-27,-20,]),'PUNTOCOMA':([10,20,24,25,34,46,47,49,50,65,96,97,],[-50,-53,-54,-55,-56,-48,-49,-51,-52,-57,106,107,]),'MULTI':([10,15,20,24,25,34,46,47,49,50,65,],[29,-56,-53,-54,-55,-56,29,29,-51,-52,-57,]),'DIVIDE':([10,15,20,24,25,34,46,47,49,50,65,],[30,-56,-53,-54,-55,-56,30,30,-51,-52,-57,]),'DOSPUNTOS':([15,37,],[39,62,]),'STRING':([23,45,64,67,68,84,],[44,68,82,82,44,82,]),'ASIGNADOR':([39,41,62,66,],[64,67,76,84,]),'TIPODATOS':([41,77,],[66,98,]),'BOOLEAN':([64,67,84,],[83,83,83,]),'INCREMENTO':([74,],[94,]),'DECREMENTO':([74,],[95,]),'COMA':([98,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'golang':([0,48,51,92,99,110,],[1,69,70,105,109,115,]),'asignacion':([0,48,51,92,99,110,],[2,2,2,2,2,2,]),'expression':([0,11,16,33,48,51,52,64,67,72,75,76,84,92,99,110,111,],[3,32,40,59,3,3,32,80,85,91,96,97,101,3,3,3,32,]),'condicional':([0,48,51,92,99,110,],[4,4,4,4,4,4,]),'bucleFor':([0,48,51,92,99,110,],[5,5,5,5,5,5,]),'funcion':([0,48,51,92,99,110,],[6,6,6,6,6,6,]),'imports':([0,48,51,92,99,110,],[7,7,7,7,7,7,]),'asignacionMate':([0,48,51,92,99,110,],[8,8,8,8,8,8,]),'asignacionOtros':([0,48,51,92,99,110,],[9,9,9,9,9,9,]),'term':([0,11,16,26,27,33,48,51,52,64,67,72,75,76,84,92,99,110,111,],[10,10,10,46,47,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'tiposCondicion':([0,48,51,92,99,110,],[11,11,11,11,11,11,]),'package':([0,48,51,92,99,110,],[17,17,17,17,17,17,]),'import':([0,48,51,92,99,110,],[18,18,18,18,18,18,]),'factor':([0,11,16,26,27,29,30,33,48,51,52,64,67,72,75,76,84,92,99,110,111,],[20,20,20,20,20,49,50,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'condicion':([11,52,111,],[31,71,116,]),'asignacionFOR':([13,],[36,]),'variosImports':([23,68,],[43,88,]),'comparadores':([32,59,61,104,],[52,72,75,111,]),'condicionFOR':([36,],[60,]),'updateFOR':([60,],[73,]),'parametros':([63,108,],[79,113,]),'valoresOtros':([64,67,84,],[81,86,102,]),'incrementoDecremento':([74,],[93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> golang","S'",1,None,None,None),
  ('golang -> asignacion','golang',1,'p_golang','sintactico.py',8),
  ('golang -> expression','golang',1,'p_golang','sintactico.py',9),
  ('golang -> condicional','golang',1,'p_golang','sintactico.py',10),
  ('golang -> bucleFor','golang',1,'p_golang','sintactico.py',11),
  ('golang -> funcion','golang',1,'p_golang','sintactico.py',12),
  ('golang -> imports','golang',1,'p_golang','sintactico.py',13),
  ('asignacion -> asignacionMate','asignacion',1,'p_asignacion','sintactico.py',17),
  ('asignacion -> asignacionOtros','asignacion',1,'p_asignacion','sintactico.py',18),
  ('asignacionMate -> VAR VARIABLE TIPODATOS ASIGNADOR expression','asignacionMate',5,'p_asignacion_mate','sintactico.py',23),
  ('asignacionMate -> VARIABLE DOSPUNTOS ASIGNADOR expression','asignacionMate',4,'p_asignacion_mate','sintactico.py',24),
  ('asignacionMate -> VAR VARIABLE ASIGNADOR expression','asignacionMate',4,'p_asignacion_mate','sintactico.py',25),
  ('asignacionOtros -> VAR VARIABLE TIPODATOS ASIGNADOR valoresOtros','asignacionOtros',5,'p_asignacion_otros','sintactico.py',29),
  ('asignacionOtros -> VARIABLE DOSPUNTOS ASIGNADOR valoresOtros','asignacionOtros',4,'p_asignacion_otros','sintactico.py',30),
  ('asignacionOtros -> VAR VARIABLE ASIGNADOR valoresOtros','asignacionOtros',4,'p_asignacion_otros','sintactico.py',31),
  ('valoresOtros -> STRING','valoresOtros',1,'p_valores_otros','sintactico.py',35),
  ('valoresOtros -> BOOLEAN','valoresOtros',1,'p_valores_otros','sintactico.py',36),
  ('funcion -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ golang LLAVEDE','funcion',7,'p_funcion_go','sintactico.py',41),
  ('funcion -> FUNCTION VARIABLE LPAREN parametros RPAREN LLAVEIZ golang LLAVEDE','funcion',8,'p_funcion_go','sintactico.py',42),
  ('parametros -> VARIABLE TIPODATOS','parametros',2,'p_parametros_func','sintactico.py',46),
  ('parametros -> VARIABLE TIPODATOS COMA parametros','parametros',4,'p_parametros_func','sintactico.py',47),
  ('imports -> package','imports',1,'p_imports','sintactico.py',53),
  ('imports -> import','imports',1,'p_imports','sintactico.py',54),
  ('package -> PACKAGE VARIABLE','package',2,'p_paquetes_go','sintactico.py',58),
  ('import -> IMPORT variosImports','import',2,'p_import_go','sintactico.py',61),
  ('variosImports -> STRING','variosImports',1,'p_variosImports','sintactico.py',64),
  ('variosImports -> LPAREN STRING RPAREN','variosImports',3,'p_variosImports','sintactico.py',65),
  ('variosImports -> LPAREN STRING variosImports RPAREN','variosImports',4,'p_variosImports','sintactico.py',66),
  ('condicional -> tiposCondicion condicion LLAVEIZ golang LLAVEDE','condicional',5,'p_condicional','sintactico.py',120),
  ('condicional -> condicional ELSE LLAVEIZ golang LLAVEDE','condicional',5,'p_condicional','sintactico.py',121),
  ('tiposCondicion -> IF','tiposCondicion',1,'p_tipos_condicion','sintactico.py',127),
  ('tiposCondicion -> ELSE IF','tiposCondicion',2,'p_tipos_condicion','sintactico.py',128),
  ('condicion -> expression','condicion',1,'p_condicion','sintactico.py',133),
  ('condicion -> LPAREN expression comparadores expression RPAREN','condicion',5,'p_condicion','sintactico.py',134),
  ('condicion -> LPAREN expression comparadores expression RPAREN comparadores condicion','condicion',7,'p_condicion','sintactico.py',135),
  ('condicion -> expression comparadores condicion','condicion',3,'p_condicion','sintactico.py',136),
  ('comparadores -> MAYORQUE','comparadores',1,'p_comparadores','sintactico.py',141),
  ('comparadores -> MENORQUE','comparadores',1,'p_comparadores','sintactico.py',142),
  ('comparadores -> MAYOROIGUALQUE','comparadores',1,'p_comparadores','sintactico.py',143),
  ('comparadores -> MENOROIGUALQUE','comparadores',1,'p_comparadores','sintactico.py',144),
  ('comparadores -> EQUIVALENTE','comparadores',1,'p_comparadores','sintactico.py',145),
  ('comparadores -> DIFERENTE','comparadores',1,'p_comparadores','sintactico.py',146),
  ('bucleFor -> FOR asignacionFOR condicionFOR updateFOR LLAVEIZ golang LLAVEDE','bucleFor',7,'p_bucle_for','sintactico.py',155),
  ('asignacionFOR -> VARIABLE DOSPUNTOS ASIGNADOR expression PUNTOCOMA','asignacionFOR',5,'p_asignacion_for','sintactico.py',159),
  ('condicionFOR -> VARIABLE comparadores expression PUNTOCOMA','condicionFOR',4,'p_condicion_for','sintactico.py',163),
  ('updateFOR -> VARIABLE incrementoDecremento','updateFOR',2,'p_update_for','sintactico.py',167),
  ('incrementoDecremento -> INCREMENTO','incrementoDecremento',1,'p_incrementos_decrementos','sintactico.py',171),
  ('incrementoDecremento -> DECREMENTO','incrementoDecremento',1,'p_incrementos_decrementos','sintactico.py',172),
  ('expression -> expression MAS term','expression',3,'p_expression_plus','sintactico.py',179),
  ('expression -> expression RESTA term','expression',3,'p_expression_minus','sintactico.py',183),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',187),
  ('term -> term MULTI factor','term',3,'p_term_times','sintactico.py',191),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',195),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',199),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',204),
  ('factor -> FLOTANTE','factor',1,'p_factor_num','sintactico.py',205),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',206),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',211),
]
