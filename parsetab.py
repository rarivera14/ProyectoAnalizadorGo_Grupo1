
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNADOR ASIGNADORDIV ASIGNADORMULT ASIGNADORRESTA ASIGNADORSUM BACKTICK BOOLEAN BREAK CASE CHAN COMILLASDOBLES CONST CONTINUE DECREMENTO DEFAULT DEFER DIFERENTE DIVIDE ELSE EQUIVALENTE FALLTHROUGH FLOTANTE FLOTANTEI FOR FUNCTION GO GOTO ID IF IMPORT INCREMENTO INTERFACE LLAVEDE LLAVEIZ LPAREN MAP MAS MAYOROIGUALQUE MAYORQUE MENOROIGUALQUE MENORQUE MODULO MULTI NUMBER PACKAGE RANGE RESTA RETURN RPAREN SELECT STRING STRUCT TYPE VAR VARIABLEgolang : expressionexpression : expression MAS termexpression : expression RESTA termexpression : termterm : term MULTI factorterm : term DIVIDE factorterm : factor\n  factor : NUMBER \n          | VARIABLE\n  factor : LPAREN expression RPAREN'
    
_lr_action_items = {'NUMBER':([0,7,8,9,10,11,],[5,5,5,5,5,5,]),'VARIABLE':([0,7,8,9,10,11,],[6,6,6,6,6,6,]),'LPAREN':([0,7,8,9,10,11,],[7,7,7,7,7,7,]),'$end':([1,2,3,4,5,6,13,14,15,16,17,],[0,-1,-4,-7,-8,-9,-2,-3,-5,-6,-10,]),'MAS':([2,3,4,5,6,12,13,14,15,16,17,],[8,-4,-7,-8,-9,8,-2,-3,-5,-6,-10,]),'RESTA':([2,3,4,5,6,12,13,14,15,16,17,],[9,-4,-7,-8,-9,9,-2,-3,-5,-6,-10,]),'RPAREN':([3,4,5,6,12,13,14,15,16,17,],[-4,-7,-8,-9,17,-2,-3,-5,-6,-10,]),'MULTI':([3,4,5,6,13,14,15,16,17,],[10,-7,-8,-9,10,10,-5,-6,-10,]),'DIVIDE':([3,4,5,6,13,14,15,16,17,],[11,-7,-8,-9,11,11,-5,-6,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'golang':([0,],[1,]),'expression':([0,7,],[2,12,]),'term':([0,7,8,9,],[3,3,13,14,]),'factor':([0,7,8,9,10,11,],[4,4,4,4,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> golang","S'",1,None,None,None),
  ('golang -> expression','golang',1,'p_golang','sintactico.py',6),
  ('expression -> expression MAS term','expression',3,'p_expression_plus','sintactico.py',9),
  ('expression -> expression RESTA term','expression',3,'p_expression_minus','sintactico.py',12),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',15),
  ('term -> term MULTI factor','term',3,'p_term_times','sintactico.py',18),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',21),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',24),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',28),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',29),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintactico.py',33),
]
